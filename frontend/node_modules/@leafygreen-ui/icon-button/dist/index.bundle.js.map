{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./src/IconButton.tsx","webpack:///external \"react\"","webpack:///external \"@leafygreen-ui/emotion\"","webpack:///external \"prop-types\"","webpack:///external \"@leafygreen-ui/box\"","webpack:///external \"@leafygreen-ui/lib\"","webpack:///external \"@leafygreen-ui/palette\""],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IconButton","Mode","Size","Default","Large","XLarge","removeButtonStyle","css","baseIconButtonStyle","uiColors","gray","base","iconButtonSizes","iconButtonMode","dark2","light2","blue","white","disabledStyle","activeStyle","iconStyle","React","forwardRef","ref","size","darkMode","disabled","active","className","children","ariaLabel","ariaLabelledBy","rest","console","error","processedChildren","Children","map","child","isComponentType","type","isGlyph","isComponentGlyph","props","childSize","title","newChildProps","length","cloneElement","iconButtonProps","tabIndex","cx","href","as","displayName","propTypes","PropTypes","bool","oneOf","values","string","node"],"mappings":"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","file":"index.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"@leafygreen-ui/emotion\"), require(\"prop-types\"), require(\"@leafygreen-ui/box\"), require(\"@leafygreen-ui/lib\"), require(\"@leafygreen-ui/palette\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"@leafygreen-ui/emotion\", \"prop-types\", \"@leafygreen-ui/box\", \"@leafygreen-ui/lib\", \"@leafygreen-ui/palette\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\"), require(\"@leafygreen-ui/emotion\"), require(\"prop-types\"), require(\"@leafygreen-ui/box\"), require(\"@leafygreen-ui/lib\"), require(\"@leafygreen-ui/palette\")) : factory(root[\"react\"], root[\"@leafygreen-ui/emotion\"], root[\"prop-types\"], root[\"@leafygreen-ui/box\"], root[\"@leafygreen-ui/lib\"], root[\"@leafygreen-ui/palette\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import IconButton from './IconButton';\nexport default IconButton;\n","import React from 'react';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport PropTypes from 'prop-types';\nimport Box, { ExtendableBox } from '@leafygreen-ui/box';\nimport { Either, isComponentType } from '@leafygreen-ui/lib';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { LGGlyph } from '@leafygreen-ui/icon/src/types';\n\nconst Mode = {\n  Light: 'light',\n  Dark: 'dark',\n} as const;\n\ntype Mode = typeof Mode[keyof typeof Mode];\n\nconst Size = {\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\ntype Size = typeof Size[keyof typeof Size];\n\nexport { Size };\n\nconst removeButtonStyle = css`\n  border: none;\n  -webkit-appearance: unset;\n  padding: unset;\n`;\n\nconst baseIconButtonStyle = css`\n  display: inline-block;\n  border-radius: 100px;\n  color: ${uiColors.gray.base};\n  position: relative;\n  cursor: pointer;\n  flex-shrink: 0;\n\n  // Set background to fully-transparent white for cross-browser compatability with Safari\n  //\n  // Safari treats \"transparent\" values in CSS as transparent black instead of white\n  // which can make things render differently across browsers if not defined explicitly.\n  background-color: rgba(255, 255, 255, 0);\n\n  &:before {\n    content: '';\n    transition: 150ms all ease-in-out;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-radius: 100%;\n    opacity: 0;\n    transform: scale(0.8);\n  }\n\n  &:hover:before,\n  &:focus:before {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst iconButtonSizes = {\n  [Size.Default]: css`\n    height: 28px;\n    width: 28px;\n  `,\n  [Size.Large]: css`\n    height: 35px;\n    width: 35px;\n  `,\n  [Size.XLarge]: css`\n    height: 42px;\n    width: 42px;\n  `,\n} as const;\n\nconst iconButtonMode = {\n  [Mode.Light]: css`\n    &:hover {\n      color: ${uiColors.gray.dark2};\n\n      &:before {\n        background-color: ${uiColors.gray.light2};\n      }\n    }\n\n    &:focus {\n      color: ${uiColors.blue.base};\n\n      &:before {\n        background-color: ${uiColors.blue.light2};\n      }\n    }\n  `,\n\n  [Mode.Dark]: css`\n    &:hover {\n      &:before {\n        background-color: ${uiColors.gray.dark2};\n      }\n      color: ${uiColors.white};\n    }\n    &:focus:before {\n      background-color: ${uiColors.blue.dark2};\n    }\n  `,\n} as const;\n\nconst disabledStyle = {\n  [Mode.Light]: css`\n    color: ${uiColors.gray.light2};\n    pointer-events: none;\n  `,\n\n  [Mode.Dark]: css`\n    color: ${uiColors.gray.dark2};\n    pointer-events: none;\n  `,\n} as const;\n\nconst activeStyle = {\n  [Mode.Light]: css`\n    color: ${uiColors.gray.dark2};\n    background-color: ${uiColors.gray.light2};\n\n    &:before {\n      background-color: ${uiColors.gray.light2};\n    }\n  `,\n\n  [Mode.Dark]: css`\n    color: ${uiColors.white};\n    background-color: ${uiColors.gray.dark2};\n\n    &:before {\n      background-color: ${uiColors.gray.dark2};\n    }\n  `,\n} as const;\n\nconst iconStyle = css`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// Since applications can't yet tree-shake, we're duplicating this interface from the types in the namespaces within the Icon package rather than importing the Icon package.\ninterface IconProps extends React.SVGProps<SVGSVGElement> {\n  glyph: string;\n  size?: Size | number;\n  title?: string | null | boolean;\n}\ninterface BaseIconButtonProps {\n  className?: string;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  size?: Size;\n  darkMode?: boolean;\n  active?: boolean;\n  href?: string;\n  'aria-label'?: string;\n  'aria-labelledby'?: string;\n}\n\ntype AriaLabels = 'aria-label' | 'aria-labelledby';\n\ntype AccessibleIconButtonProps = Either<BaseIconButtonProps, AriaLabels>;\n\nfunction isComponentGlyph(\n  child: React.ReactNode,\n): child is React.ReactElement<LGGlyph.ComponentProps> {\n  return (\n    child != null &&\n    typeof child === 'object' &&\n    'type' in child &&\n    (child.type as any).isGlyph === true\n  );\n}\n\nconst IconButton: ExtendableBox<\n  AccessibleIconButtonProps & { ref?: React.Ref<any> },\n  'button'\n> = React.forwardRef(\n  (\n    {\n      size = Size.Default,\n      darkMode = false,\n      disabled = false,\n      active = false,\n      className,\n      children,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      ...rest\n    }: AccessibleIconButtonProps,\n    ref: React.Ref<any>,\n  ) => {\n    const mode = darkMode ? 'dark' : 'light';\n\n    // We do our own proptype validation here to ensure either 'aria-label' or 'aria-labelledby' are passed to the component.\n    if (!ariaLabel && !ariaLabelledBy) {\n      console.error(\n        'For screen-reader accessibility, aria-label or aria-labelledby must be provided to IconButton.',\n      );\n    }\n\n    const processedChildren = React.Children.map(children, child => {\n      if (!child) {\n        return null;\n      }\n\n      // Check to see if child is a LeafyGreen Icon or a LeafyGreen Glyph\n      // If so, we unset the title and rely on the aria-label prop to give\n      // information about the rendered content.\n      if (isComponentType(child, 'Icon') || isComponentGlyph(child)) {\n        const { size: childSize, title }: IconProps = child.props;\n\n        const newChildProps: Partial<IconProps> = {\n          size: childSize || size,\n        };\n\n        if (typeof title !== 'string' || title.length === 0) {\n          // Unsets the title within an icon since the button itself will have\n          // aria-label or aria-labelledby set.\n          newChildProps.title = false;\n        }\n\n        return React.cloneElement(child, newChildProps);\n      }\n\n      return child;\n    });\n\n    const accessibleLabel = ariaLabel\n      ? { ['aria-label']: ariaLabel }\n      : { ['aria-labelledby']: ariaLabelledBy };\n\n    const iconButtonProps = {\n      ...rest,\n      ...accessibleLabel,\n      ref,\n      tabIndex: disabled ? -1 : 0,\n      ['aria-disabled']: disabled,\n      className: cx(\n        removeButtonStyle,\n        baseIconButtonStyle,\n        iconButtonSizes[size],\n        iconButtonMode[mode],\n        {\n          [disabledStyle[mode]]: disabled,\n          [activeStyle[mode]]: active,\n        },\n        className,\n      ),\n    };\n\n    if (typeof rest.href === 'string') {\n      return (\n        <Box as=\"a\" {...iconButtonProps}>\n          <div className={iconStyle}>{processedChildren}</div>\n        </Box>\n      );\n    }\n\n    return (\n      <Box as=\"button\" {...iconButtonProps}>\n        <div className={iconStyle}>{processedChildren}</div>\n      </Box>\n    );\n  },\n);\n\nIconButton.displayName = 'IconButton';\n\n// @ts-ignore: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37660\nIconButton.propTypes = {\n  darkMode: PropTypes.bool,\n  size: PropTypes.oneOf(Object.values(Size)),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  // @ts-ignore\n  href: PropTypes.string,\n  active: PropTypes.bool,\n};\n\nexport default IconButton;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;"],"sourceRoot":""}