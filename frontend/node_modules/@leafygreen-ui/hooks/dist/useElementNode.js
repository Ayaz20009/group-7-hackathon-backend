import { useState, useCallback } from 'react';
/**
 * Hook to subscribe to changes in a ref element.
 * Example:
 ```
 const Example = () => {
   [ refNode, setRefNode ] = useElementNode()
   return (
     <div ref={setRefNode}>I am a ref</div>
   )
  }
```
 */
export default function useElementNode() {
    var _a = useState(null), element = _a[0], setElement = _a[1];
    var elementRefCallback = useCallback(function (node) {
        if (node) {
            setElement(node);
        }
    }, []);
    return [element, elementRefCallback];
}
//# sourceMappingURL=useElementNode.js.map