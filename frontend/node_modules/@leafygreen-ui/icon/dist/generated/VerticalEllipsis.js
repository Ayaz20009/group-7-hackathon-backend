var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/**
 * This is a generated file. Do not modify it manually.
 *
 * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts
 * @checksum 2101479291b7b79ff9859658f63d0bf5
 */
import * as React from 'react';
import PropTypes from 'prop-types';
import { css, cx } from '@leafygreen-ui/emotion';
import { IdAllocator } from '@leafygreen-ui/lib';
import { getGlyphTitle, sizeMap } from '../glyphCommon';
var idAllocator = IdAllocator.create('VerticalEllipsis');
var VerticalEllipsis = function (_a) {
    var _b;
    var className = _a.className, _c = _a.size, size = _c === void 0 ? 16 : _c, title = _a.title, customTitleId = _a.titleId, fill = _a.fill, props = __rest(_a, ["className", "size", "title", "titleId", "fill"]);
    var titleId = React.useMemo(function () { return customTitleId || idAllocator.generate(); }, [
        customTitleId,
    ]);
    var fillStyle = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    color: ", ";\n  "], ["\n    color: ", ";\n  "])), fill);
    title = getGlyphTitle('VerticalEllipsis', title);
    return (React.createElement("svg", __assign({ className: cx((_b = {},
            _b[fillStyle] = fill != null,
            _b), className), height: typeof size === 'number' ? size : sizeMap[size], width: typeof size === 'number' ? size : sizeMap[size] }, props, { viewBox: "0 0 16 16", role: "img", "aria-labelledby": titleId }),
        title === undefined ? (React.createElement("title", { id: titleId }, 'Glyphs / Vertical Ellipsis')) : title ? (React.createElement("title", { id: titleId }, title)) : null,
        React.createElement("desc", null, 'Created with Sketch.'),
        React.createElement("g", { id: "Glyphs-/-Vertical-Ellipsis", stroke: "none", strokeWidth: 1, fill: "none", fillRule: "evenodd" },
            React.createElement("path", { d: "M8,12.5 L8.14439324,12.5068608 C8.90473356,12.5794844 9.5,13.2197059 9.5,13.999 L9.5,13.999 L9.49312925,14.1435595 C9.42040138,14.9047336 8.77929412,15.5 8,15.5 L8,15.5 L7.85560676,15.493129 C7.09526644,15.4203979 6.5,14.7792353 6.5,13.999 C6.5,13.171 7.172,12.5 8,12.5 L8,12.5 Z M8,6.501 L8.14439324,6.50786078 C8.90473356,6.58048443 9.5,7.22070588 9.5,8 L9.5,8 L9.49312925,8.14438327 C9.42040138,8.90461938 8.77929412,9.499 8,9.499 L8,9.499 L7.85560676,9.49213922 C7.09526644,9.41951557 6.5,8.77929412 6.5,8 C6.5,7.172 7.172,6.501 8,6.501 L8,6.501 Z M8,0.5 L8.14439324,0.506870955 C8.90473356,0.579602076 9.5,1.22076471 9.5,2.001 L9.5,2.001 L9.49312925,2.14538327 C9.42040138,2.90561938 8.77929412,3.5 8,3.5 L8,3.5 L7.85560676,3.49313922 C7.09526644,3.42051557 6.5,2.78029412 6.5,2.001 C6.5,1.172 7.172,0.5 8,0.5 L8,0.5 Z", id: "Combined-Shape", fill: 'currentColor' }))));
};
VerticalEllipsis.displayName = 'VerticalEllipsis';
VerticalEllipsis.isGlyph = true;
VerticalEllipsis.propTypes = {
    fill: PropTypes.string,
    size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    className: PropTypes.string,
};
export default VerticalEllipsis;
var templateObject_1;
//# sourceMappingURL=VerticalEllipsis.js.map