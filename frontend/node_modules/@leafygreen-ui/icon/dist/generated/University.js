var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/**
 * This is a generated file. Do not modify it manually.
 *
 * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts
 * @checksum 5f8e3d14c3b02427522d0e72d3dca62f
 */
import * as React from 'react';
import PropTypes from 'prop-types';
import { css, cx } from '@leafygreen-ui/emotion';
import { IdAllocator } from '@leafygreen-ui/lib';
import { getGlyphTitle, sizeMap } from '../glyphCommon';
var idAllocator = IdAllocator.create('University');
var University = function (_a) {
    var _b;
    var className = _a.className, _c = _a.size, size = _c === void 0 ? 16 : _c, title = _a.title, customTitleId = _a.titleId, fill = _a.fill, props = __rest(_a, ["className", "size", "title", "titleId", "fill"]);
    var titleId = React.useMemo(function () { return customTitleId || idAllocator.generate(); }, [
        customTitleId,
    ]);
    var fillStyle = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    color: ", ";\n  "], ["\n    color: ", ";\n  "])), fill);
    title = getGlyphTitle('University', title);
    return (React.createElement("svg", __assign({ className: cx((_b = {},
            _b[fillStyle] = fill != null,
            _b), className), height: typeof size === 'number' ? size : sizeMap[size], width: typeof size === 'number' ? size : sizeMap[size] }, props, { viewBox: "0 0 16 16", role: "img", "aria-labelledby": titleId }),
        title === undefined ? (React.createElement("title", { id: titleId }, 'Glyphs / University')) : title ? (React.createElement("title", { id: titleId }, title)) : null,
        React.createElement("desc", null, 'Created with Sketch.'),
        React.createElement("g", { id: "Glyphs-/-University", stroke: "none", strokeWidth: 1, fill: "none", fillRule: "evenodd" },
            React.createElement("path", { d: "M14.1791869,2.0013334 C12.8472194,2.07769464 10.1998123,2.35563971 8.56547844,3.36625977 C8.45269871,3.43599157 8.38877399,3.5599865 8.38877399,3.68962872 L8.38877399,12.6238931 C8.38877399,12.9074855 8.69575848,13.0867257 8.95461713,12.9551192 C10.6361046,12.100168 13.0679176,11.8669102 14.2703343,11.8030712 C14.6808623,11.7812186 14.9999999,11.4487649 14.9999999,11.0502624 L14.9999999,2.75512436 C15.0002428,2.32028274 14.626903,1.97579781 14.1791869,2.0013334 Z M7.43452132,3.36625977 C5.80043048,2.35563971 3.15302345,2.07794017 1.82105591,2.0013334 C1.37333981,1.97579781 1,2.32028274 1,2.75512436 L1,11.0505079 C1,11.449256 1.31913748,11.7817097 1.72966543,11.8033168 C2.93256824,11.8671557 5.36559655,12.1006591 7.04708405,12.9561013 C7.30521353,13.0874623 7.61122578,12.9084676 7.61122578,12.6256118 L7.61122578,3.6852091 C7.61122578,3.55532134 7.54754412,3.43623711 7.43452132,3.36625977 Z", id: "Shape", fill: 'currentColor' }))));
};
University.displayName = 'University';
University.isGlyph = true;
University.propTypes = {
    fill: PropTypes.string,
    size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    className: PropTypes.string,
};
export default University;
var templateObject_1;
//# sourceMappingURL=University.js.map