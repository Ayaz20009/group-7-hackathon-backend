var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/**
 * This is a generated file. Do not modify it manually.
 *
 * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts
 * @checksum b261c20a039d2494fc3d8d298ff95c75
 */
import * as React from 'react';
import PropTypes from 'prop-types';
import { css, cx } from '@leafygreen-ui/emotion';
import { IdAllocator } from '@leafygreen-ui/lib';
import { getGlyphTitle, sizeMap } from '../glyphCommon';
var idAllocator = IdAllocator.create('PersonWithLock');
var PersonWithLock = function (_a) {
    var _b;
    var className = _a.className, _c = _a.size, size = _c === void 0 ? 16 : _c, title = _a.title, customTitleId = _a.titleId, fill = _a.fill, props = __rest(_a, ["className", "size", "title", "titleId", "fill"]);
    var titleId = React.useMemo(function () { return customTitleId || idAllocator.generate(); }, [
        customTitleId,
    ]);
    var fillStyle = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    color: ", ";\n  "], ["\n    color: ", ";\n  "])), fill);
    title = getGlyphTitle('PersonWithLock', title);
    return (React.createElement("svg", __assign({ className: cx((_b = {},
            _b[fillStyle] = fill != null,
            _b), className), height: typeof size === 'number' ? size : sizeMap[size], width: typeof size === 'number' ? size : sizeMap[size] }, props, { viewBox: "0 0 16 16", role: "img", "aria-labelledby": titleId }),
        title === undefined ? (React.createElement("title", { id: titleId }, 'PersonWithLock')) : title ? (React.createElement("title", { id: titleId }, title)) : null,
        React.createElement("desc", null, 'Created with Sketch.'),
        React.createElement("g", { id: "PersonWithLock-Copy", stroke: "none", strokeWidth: 1, fill: "none", fillRule: "evenodd" },
            React.createElement("path", { d: "M11.1484375,8.640625 C10.5625,9.1015625 10.15625,9.78125 10.0390625,10.5546875 C9.4375,10.515625 8.765625,10.5 8,10.5 C3.5,10.5 2,11.0078125 2,14 L0,14 C0,10.09375 2.328125,8.96875 4.890625,8.6328125 C4.3359375,7.78125 4,6.6875 4,5.5 C4,2.7421875 5.7890625,1 8,1 C10.2109375,1 12,2.7421875 12,5.5 C12,6.6875 11.6640625,7.78125 11.1171875,8.6328125 C11.125,8.640625 11.140625,8.640625 11.1484375,8.640625 Z M8,8.5 C9.0625,8.5 10,7.1015625 10,5.5 C10,3.984375 9.21875,3 8,3 C6.78125,3 6,3.984375 6,5.5 C6,7.1015625 6.9375,8.5 8,8.5 Z M15,12.5 L16,12.5 L16,16 L10,16 L10,12.5 L11,12.5 L11,11 C11,9.8984375 11.8984375,9 13,9 C14.1015625,9 15,9.8984375 15,11 L15,12.5 Z M12,11 L12,12.5 L14,12.5 L14,11 C14,10.453125 13.546875,10 13,10 C12.453125,10 12,10.453125 12,11 Z", id: "\\uE230", fill: 'currentColor' }))));
};
PersonWithLock.displayName = 'PersonWithLock';
PersonWithLock.isGlyph = true;
PersonWithLock.propTypes = {
    fill: PropTypes.string,
    size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    className: PropTypes.string,
};
export default PersonWithLock;
var templateObject_1;
//# sourceMappingURL=PersonWithLock.js.map