{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./src/TextInput.tsx","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"@leafygreen-ui/emotion\"","webpack:///external \"@leafygreen-ui/icon/dist/Checkmark\"","webpack:///external \"@leafygreen-ui/icon/dist/Warning\"","webpack:///external \"@leafygreen-ui/palette\"","webpack:///external \"@leafygreen-ui/leafygreen-provider\"","webpack:///external \"@leafygreen-ui/lib\""],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TextInput","inputSelectorProp","createDataProp","iconSelectorProp","State","None","Valid","Error","TextInputType","Email","Password","Search","Text","Url","Tel","interactionRing","css","uiColors","gray","light2","textInputStyle","labelStyle","dark2","descriptionStyle","dark1","inputContainerStyle","inputStyle","white","base","selector","interactionRingFocusStyle","interactionRingHoverStyle","inputIconStyle","errorIconStyle","red","validIconStyle","green","optionalStyle","errorMessageStyle","getStatefulInputStyles","state","optional","light1","idAllocator","IdAllocator","React","forwardRef","label","description","onChange","placeholder","errorMessage","disabled","type","propsId","id","ariaLabelledBy","controlledValue","className","rest","isControlled","useState","uncontrolledValue","setValue","showFocus","useUsingKeyboardContext","usingKeyboard","useMemo","generate","console","error","cx","htmlFor","prop","aria-labelledby","required","e","target","ref","displayName","propTypes","PropTypes","string","bool","func","oneOf","values"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"@leafygreen-ui/emotion\"), require(\"@leafygreen-ui/icon/dist/Checkmark\"), require(\"@leafygreen-ui/icon/dist/Warning\"), require(\"@leafygreen-ui/palette\"), require(\"@leafygreen-ui/leafygreen-provider\"), require(\"@leafygreen-ui/lib\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\", \"@leafygreen-ui/emotion\", \"@leafygreen-ui/icon/dist/Checkmark\", \"@leafygreen-ui/icon/dist/Warning\", \"@leafygreen-ui/palette\", \"@leafygreen-ui/leafygreen-provider\", \"@leafygreen-ui/lib\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\"), require(\"prop-types\"), require(\"@leafygreen-ui/emotion\"), require(\"@leafygreen-ui/icon/dist/Checkmark\"), require(\"@leafygreen-ui/icon/dist/Warning\"), require(\"@leafygreen-ui/palette\"), require(\"@leafygreen-ui/leafygreen-provider\"), require(\"@leafygreen-ui/lib\")) : factory(root[\"react\"], root[\"prop-types\"], root[\"@leafygreen-ui/emotion\"], root[\"@leafygreen-ui/icon/dist/Checkmark\"], root[\"@leafygreen-ui/icon/dist/Warning\"], root[\"@leafygreen-ui/palette\"], root[\"@leafygreen-ui/leafygreen-provider\"], root[\"@leafygreen-ui/lib\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import TextInput, { TextInputType } from './TextInput';\nexport { TextInputType };\nexport default TextInput;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport CheckmarkIcon from '@leafygreen-ui/icon/dist/Checkmark';\nimport WarningIcon from '@leafygreen-ui/icon/dist/Warning';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { useUsingKeyboardContext } from '@leafygreen-ui/leafygreen-provider';\nimport {\n  createDataProp,\n  HTMLElementProps,\n  Either,\n  IdAllocator,\n} from '@leafygreen-ui/lib';\n\nconst inputSelectorProp = createDataProp('input-selector');\nconst iconSelectorProp = createDataProp('icon-selector');\n\nexport const State = {\n  None: 'none',\n  Valid: 'valid',\n  Error: 'error',\n} as const;\n\nexport type State = typeof State[keyof typeof State];\n\nexport const TextInputType = {\n  Email: 'email',\n  Password: 'password',\n  Search: 'search',\n  Text: 'text',\n  Url: 'url',\n  Tel: 'tel',\n};\n\nexport type TextInputType = typeof TextInputType[keyof typeof TextInputType];\n\ninterface BaseTextInputProps extends HTMLElementProps<'input'> {\n  /**\n   * id associated with the TextInput component.\n   */\n  id?: string;\n\n  /**\n   * Text shown in bold above the input element.\n   */\n  label?: string;\n\n  /**\n   * Text that gives more detail about the requirements for the input.\n   */\n  description?: string;\n\n  /**\n   * Whether or not the field is optional.\n   * Default: false\n   */\n  optional?: boolean;\n\n  /**\n   * Whether or not the field is currently disabled.\n   * Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Callback to be executed when the value of the input field changes.\n   */\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * The placeholder text shown in the input field before the user begins typing.\n   */\n  placeholder?: string;\n\n  /**\n   * The message shown below the input field if the value is invalid.\n   */\n  errorMessage?: string;\n\n  /**\n   * The current state of the TextInput. This can be none, valid, or error.\n   */\n  state?: State;\n\n  /**\n   * The current value of the input field. If a value is passed to this prop, component will be controlled by consumer.\n   */\n  value?: string;\n\n  /**\n   * className supplied to the TextInput container.\n   */\n  className?: string;\n\n  type?: TextInputType;\n}\n\ntype AriaLabels = 'label' | 'aria-labelledby';\ntype TextInputProps = Either<BaseTextInputProps, AriaLabels>;\n\nconst interactionRing = css`\n  transition: all 150ms ease-in-out;\n  transform: scale(0.9, 0.8);\n  border-radius: 7px;\n  position: absolute;\n  top: -3px;\n  bottom: -3px;\n  left: -3px;\n  right: -3px;\n  pointer-events: none;\n  background-color: ${uiColors.gray.light2};\n`;\n\nconst textInputStyle = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst labelStyle = css`\n  color: ${uiColors.gray.dark2};\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 16px;\n  padding-bottom: 4px;\n`;\n\nconst descriptionStyle = css`\n  color: ${uiColors.gray.dark1};\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: normal;\n  padding-bottom: 4px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n\nconst inputContainerStyle = css`\n  position: relative;\n  display: flex;\n  align-items: center;\n  z-index: 0;\n`;\n\nconst inputStyle = css`\n  width: 100%;\n  height: 36px;\n  border-radius: 4px;\n  padding-left: 12px;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: Akzidenz, ‘Helvetica Neue’, Helvetica, Arial, sans-serif;\n  background-color: ${uiColors.white};\n  border: 1px solid;\n  z-index: 1;\n\n  &::placeholder {\n    color: ${uiColors.gray.base};\n  }\n\n  &:focus {\n    outline: none;\n    z-index: 2;\n    border-color: #9dd0e7;\n    transition: border-color 150ms ease-in-out;\n\n    & ~ ${iconSelectorProp.selector} {\n      z-index: 2;\n    }\n  }\n\n  &:disabled {\n    background-color: ${uiColors.gray.light2};\n  }\n`;\n\nconst interactionRingFocusStyle = css`\n  ${inputSelectorProp.selector}:focus ~ & {\n    background-color: #9dd0e7;\n    transform: scale(1);\n    z-index: 1;\n  }\n`;\n\nconst interactionRingHoverStyle = css`\n  ${inputSelectorProp.selector}:hover ~ & {\n    transform: scale(1);\n  }\n`;\n\nconst inputIconStyle = css`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  right: 12px;\n  z-index: 1;\n`;\n\nconst errorIconStyle = css`\n  color: ${uiColors.red.base};\n`;\n\nconst validIconStyle = css`\n  color: ${uiColors.green.base};\n`;\n\nconst optionalStyle = css`\n  color: ${uiColors.gray.dark1};\n  font-size: 12px;\n  font-style: italic;\n  font-weight: normal;\n`;\n\nconst errorMessageStyle = css`\n  color: ${uiColors.red.base};\n  font-size: 14px;\n  height: 20px;\n  padding-top: 4px;\n  font-weight: normal;\n`;\n\nfunction getStatefulInputStyles(state: State, optional: boolean) {\n  switch (state) {\n    case State.Valid: {\n      return css`\n        padding-right: 30px;\n        border-color: ${uiColors.green.base};\n      `;\n    }\n\n    case State.Error: {\n      return css`\n        padding-right: 30px;\n        border-color: ${uiColors.red.base};\n      `;\n    }\n\n    default: {\n      return css`\n        padding-right: ${optional ? 60 : 12}px;\n        border-color: ${uiColors.gray.light1};\n      `;\n    }\n  }\n}\n\nconst idAllocator = IdAllocator.create('text-input');\n\n/**\n * # TextInput\n *\n * TextInput component\n *\n * ```\n<TextInput label='Input Label' onChange={() => execute when value of input field changes}/>\n```\n * @param props.id id associated with the TextInput component.\n * @param props.label Text shown in bold above the input element.\n * @param props.description Text that gives more detail about the requirements for the input.\n * @param props.optional Whether or not the field is optional.\n * @param props.disabled Whether or not the field is currently disabled.\n * @param props.onChange Callback to be executed when the value of the input field changes.\n * @param props.placeholder The placeholder text shown in the input field before the user begins typing.\n * @param props.errorMessage The message shown below the input field if the value is invalid.\n * @param props.state The current state of the TextInput. This can be none, valid, or error.\n * @param props.value The current value of the input field. If a value is passed to this prop, component will be controlled by consumer.\n * @param props.className className supplied to the TextInput container.\n */\nconst TextInput = React.forwardRef(\n  (\n    {\n      label,\n      description,\n      onChange,\n      placeholder,\n      errorMessage,\n      optional = false,\n      disabled = false,\n      state = State.None,\n      type = TextInputType.Text,\n      id: propsId,\n      'aria-labelledby': ariaLabelledBy,\n      value: controlledValue,\n      className,\n      ...rest\n    }: TextInputProps,\n    forwardRef: React.Ref<HTMLInputElement>,\n  ) => {\n    const isControlled = typeof controlledValue === 'string';\n    const [uncontrolledValue, setValue] = useState('');\n    const value = isControlled ? controlledValue : uncontrolledValue;\n    const { usingKeyboard: showFocus } = useUsingKeyboardContext();\n    const id = useMemo(() => propsId ?? idAllocator.generate(), [propsId]);\n\n    function onValueChange(e: React.ChangeEvent<HTMLInputElement>) {\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (!isControlled) {\n        setValue(e.target.value);\n      }\n    }\n\n    if (!label && !ariaLabelledBy) {\n      console.error(\n        'For screen-reader accessibility, label or aria-labelledby must be provided to IconButton.',\n      );\n    }\n\n    return (\n      <div className={cx(textInputStyle, className)}>\n        {label && (\n          <label htmlFor={id} className={labelStyle}>\n            {label}\n          </label>\n        )}\n        {description && <p className={descriptionStyle}>{description}</p>}\n        <div className={inputContainerStyle}>\n          <input\n            {...inputSelectorProp.prop}\n            {...rest}\n            aria-labelledby={ariaLabelledBy}\n            type={type}\n            className={cx(inputStyle, getStatefulInputStyles(state, optional))}\n            value={value}\n            required={!optional}\n            disabled={disabled}\n            placeholder={placeholder}\n            onChange={onValueChange}\n            ref={forwardRef}\n            id={id}\n          />\n          <div {...iconSelectorProp.prop} className={inputIconStyle}>\n            {state === State.Valid && (\n              <CheckmarkIcon className={validIconStyle} />\n            )}\n\n            {state === State.Error && (\n              <WarningIcon className={errorIconStyle} />\n            )}\n\n            {state === State.None && optional && (\n              <div className={optionalStyle}>\n                <p>Optional</p>\n              </div>\n            )}\n          </div>\n          <div\n            className={cx(interactionRing, interactionRingHoverStyle, {\n              [interactionRingFocusStyle]: showFocus,\n            })}\n          />\n        </div>\n        {state === State.Error && errorMessage && (\n          <div className={errorMessageStyle}>\n            <label>{errorMessage}</label>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nTextInput.displayName = 'TextInput';\n\nTextInput.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  description: PropTypes.string,\n  optional: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  errorMessage: PropTypes.string,\n  state: PropTypes.oneOf(Object.values(State)),\n  value: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default TextInput;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}