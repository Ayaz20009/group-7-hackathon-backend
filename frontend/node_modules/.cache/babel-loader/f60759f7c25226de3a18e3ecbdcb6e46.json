{"ast":null,"code":"var _jsxFileName = \"/Users/scapista/code/hackathon/group-7-hackathon-backend/frontend/src/components/useChangeTaskStatusButton.js\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport LGButton from \"@leafygreen-ui/button\";\nimport StatusChange from \"./StatusChange\";\nimport useTaskMutations from \"../graphql/useTaskMutations\"; // Use a hook to dynamically create status update buttons for the specified project\n\nexport default function useChangeTaskStatusButton(project) {\n  const {\n    updateTask\n  } = useTaskMutations(project);\n\n  const ChangeTaskStatusButton = _ref => {\n    let {\n      task,\n      fromStatus,\n      toStatus,\n      children\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: () => updateTask(task, {\n        status: toStatus\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ButtonContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, children, /*#__PURE__*/React.createElement(StatusChange, {\n      from: fromStatus,\n      to: toStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return ChangeTaskStatusButton;\n}\nconst Button = styled(LGButton)`\n  height: 100%;\n`;\nconst ButtonContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px 0;\n  gap: 8px;\n`;","map":{"version":3,"names":["React","styled","LGButton","StatusChange","useTaskMutations","useChangeTaskStatusButton","project","updateTask","ChangeTaskStatusButton","task","fromStatus","toStatus","children","status","Button","ButtonContent","div"],"sources":["/Users/scapista/code/hackathon/group-7-hackathon-backend/frontend/src/components/useChangeTaskStatusButton.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport LGButton from \"@leafygreen-ui/button\";\nimport StatusChange from \"./StatusChange\";\nimport useTaskMutations from \"../graphql/useTaskMutations\";\n\n// Use a hook to dynamically create status update buttons for the specified project\nexport default function useChangeTaskStatusButton(project) {\n  const { updateTask } = useTaskMutations(project);\n  const ChangeTaskStatusButton = ({ task, fromStatus, toStatus, children }) => {\n    return (\n      <Button onClick={() => updateTask(task, { status: toStatus })}>\n        <ButtonContent>\n          {children}\n          <StatusChange from={fromStatus} to={toStatus} />\n        </ButtonContent>\n      </Button>\n    );\n  };\n  return ChangeTaskStatusButton;\n}\n\nconst Button = styled(LGButton)`\n  height: 100%;\n`;\n\nconst ButtonContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px 0;\n  gap: 8px;\n`;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B,C,CAEA;;AACA,eAAe,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;EACzD,MAAM;IAAEC;EAAF,IAAiBH,gBAAgB,CAACE,OAAD,CAAvC;;EACA,MAAME,sBAAsB,GAAG,QAA8C;IAAA,IAA7C;MAAEC,IAAF;MAAQC,UAAR;MAAoBC,QAApB;MAA8BC;IAA9B,CAA6C;IAC3E,oBACE,oBAAC,MAAD;MAAQ,OAAO,EAAE,MAAML,UAAU,CAACE,IAAD,EAAO;QAAEI,MAAM,EAAEF;MAAV,CAAP,CAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,aAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGC,QADH,eAEE,oBAAC,YAAD;MAAc,IAAI,EAAEF,UAApB;MAAgC,EAAE,EAAEC,QAApC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFF,CADF,CADF;EAQD,CATD;;EAUA,OAAOH,sBAAP;AACD;AAED,MAAMM,MAAM,GAAGb,MAAM,CAACC,QAAD,CAAW;AAChC;AACA,CAFA;AAIA,MAAMa,aAAa,GAAGd,MAAM,CAACe,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA"},"metadata":{},"sourceType":"module"}