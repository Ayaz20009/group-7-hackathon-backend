{"ast":null,"code":"var _jsxFileName = \"/Users/scapista/code/hackathon/group-7-hackathon-backend/frontend/src/components/StatusBadge.js\";\nimport React from \"react\";\nimport Badge from \"@leafygreen-ui/badge\";\nexport default function StatusBadge(_ref) {\n  let {\n    status\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Badge, {\n    variant: getColorForStatus(status),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, getTaskStatusDisplayName(status));\n}\n\nconst getColorForStatus = status => {\n  switch (status) {\n    case \"Open\":\n      return \"blue\";\n\n    case \"InProgress\":\n      return \"yellow\";\n\n    case \"Complete\":\n      return \"green\";\n\n    default:\n      return \"gray\";\n  }\n};\n\nconst getTaskStatusDisplayName = status => {\n  if (status === \"InProgress\") {\n    // Add a non-breaking space so that the string is always a single line\n    const nbsp = String.fromCharCode(160);\n    return `In${nbsp}Progress`;\n  }\n\n  return status;\n};","map":{"version":3,"names":["React","Badge","StatusBadge","status","getColorForStatus","getTaskStatusDisplayName","nbsp","String","fromCharCode"],"sources":["/Users/scapista/code/hackathon/group-7-hackathon-backend/frontend/src/components/StatusBadge.js"],"sourcesContent":["import React from \"react\";\nimport Badge from \"@leafygreen-ui/badge\";\n\nexport default function StatusBadge({ status }) {\n  return (\n    <Badge variant={getColorForStatus(status)}>\n      {getTaskStatusDisplayName(status)}\n    </Badge>\n  );\n}\n\nconst getColorForStatus = (status) => {\n  switch (status) {\n    case \"Open\":\n      return \"blue\";\n    case \"InProgress\":\n      return \"yellow\";\n    case \"Complete\":\n      return \"green\";\n    default:\n      return \"gray\";\n  }\n};\n\nconst getTaskStatusDisplayName = (status) => {\n  if (status === \"InProgress\") {\n    // Add a non-breaking space so that the string is always a single line\n    const nbsp = String.fromCharCode(160);\n    return `In${nbsp}Progress`;\n  }\n  return status;\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,eAAe,SAASC,WAAT,OAAiC;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC9C,oBACE,oBAAC,KAAD;IAAO,OAAO,EAAEC,iBAAiB,CAACD,MAAD,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGE,wBAAwB,CAACF,MAAD,CAD3B,CADF;AAKD;;AAED,MAAMC,iBAAiB,GAAID,MAAD,IAAY;EACpC,QAAQA,MAAR;IACE,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,YAAL;MACE,OAAO,QAAP;;IACF,KAAK,UAAL;MACE,OAAO,OAAP;;IACF;MACE,OAAO,MAAP;EARJ;AAUD,CAXD;;AAaA,MAAME,wBAAwB,GAAIF,MAAD,IAAY;EAC3C,IAAIA,MAAM,KAAK,YAAf,EAA6B;IAC3B;IACA,MAAMG,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAb;IACA,OAAQ,KAAIF,IAAK,UAAjB;EACD;;EACD,OAAOH,MAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}