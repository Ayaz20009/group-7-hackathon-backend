{"ast":null,"code":"var bufferFrom = require('buffer-from');\n\nvar Transform = require('readable-stream').Transform;\n\nvar inherits = require('inherits');\n\ninherits(Tokenize, Transform);\nmodule.exports = Tokenize;\nvar codes = {\n  lt: '<'.charCodeAt(0),\n  gt: '>'.charCodeAt(0),\n  slash: '/'.charCodeAt(0),\n  dquote: '\"'.charCodeAt(0),\n  squote: \"'\".charCodeAt(0),\n  equal: '='.charCodeAt(0)\n};\nvar strings = {\n  endScript: bufferFrom('</script'),\n  endStyle: bufferFrom('</style'),\n  endTitle: bufferFrom('</title'),\n  comment: bufferFrom('<!--'),\n  endComment: bufferFrom('-->'),\n  cdata: bufferFrom('<![CDATA['),\n  endCdata: bufferFrom(']]>')\n};\nvar states = {\n  'TagNameState': 1,\n  'AttributeNameState': 2,\n  'BeforeAttributeValueState': 3,\n  'AttributeValueState': 4\n};\n\nfunction Tokenize() {\n  if (!(this instanceof Tokenize)) return new Tokenize();\n  Transform.call(this);\n  this._readableState.objectMode = true;\n  this.state = 'text';\n  this.tagState = null;\n  this.quoteState = null;\n  this.raw = null;\n  this.buffers = [];\n  this._last = [];\n}\n\nTokenize.prototype._transform = function (buf, enc, next) {\n  var i = 0;\n  var offset = 0;\n\n  if (this._prev) {\n    buf = Buffer.concat([this._prev, buf]);\n    i = this._prev.length - 1;\n    offset = this._offset;\n    this._prev = null;\n    this._offset = 0;\n  }\n\n  for (; i < buf.length; i++) {\n    var b = buf[i];\n\n    this._last.push(b);\n\n    if (this._last.length > 9) this._last.shift(); // detect end of raw character mode (comment, script,..)\n\n    if (this.raw) {\n      var parts = this._testRaw(buf, offset, i);\n\n      if (parts) {\n        this.push(['text', parts[0]]);\n\n        if (this.raw === strings.endComment || this.raw === strings.endCdata) {\n          this.state = 'text';\n          this.buffers = [];\n          this.push(['close', parts[1]]);\n        } else {\n          this.state = 'open';\n          this.buffers = [parts[1]];\n        }\n\n        this.raw = null;\n        offset = i + 1;\n      }\n    } // ask for more data if last byte is '<' \n    else if (this.state === 'text' && b === codes.lt && i === buf.length - 1) {\n      this._prev = buf;\n      this._offset = offset;\n      return next();\n    } // detect a tag opening\n    else if (this.state === 'text' && b === codes.lt && !isWhiteSpace(buf[i + 1])) {\n      if (i > 0 && i - offset > 0) {\n        this.buffers.push(buf.slice(offset, i));\n      }\n\n      offset = i;\n      this.state = 'open';\n      this.tagState = states.TagNameState;\n\n      this._pushState('text');\n    } else if (this.tagState === states.TagNameState && isWhiteSpace(b)) {\n      this.tagState = states.AttributeNameState;\n    } else if (this.tagState === states.AttributeNameState && b === codes.equal) {\n      this.tagState = states.BeforeAttributeValueState;\n    } else if (this.tagState === states.BeforeAttributeValueState && isWhiteSpace(b)) {} else if (this.tagState === states.BeforeAttributeValueState && b !== codes.gt) {\n      this.tagState = states.AttributeValueState;\n\n      if (b === codes.dquote) {\n        this.quoteState = 'double';\n      } else if (b === codes.squote) {\n        this.quoteState = 'single';\n      } else {\n        this.quoteState = null;\n      }\n    } else if (this.tagState === states.AttributeValueState && !this.quoteState && isWhiteSpace(b)) {\n      this.tagState = states.AttributeNameState;\n    } else if (this.tagState === states.AttributeValueState && this.quoteState === 'double' && b === codes.dquote) {\n      this.quoteState = null;\n      this.tagState = states.AttributeNameState;\n    } else if (this.tagState === states.AttributeValueState && this.quoteState === 'single' && b === codes.squote) {\n      this.quoteState = null;\n      this.tagState = states.AttributeNameState;\n    } else if (this.state === 'open' && b === codes.gt && !this.quoteState) {\n      this.buffers.push(buf.slice(offset, i + 1));\n      offset = i + 1;\n      this.state = 'text';\n      this.tagState = null;\n\n      if (this._getChar(1) === codes.slash) {\n        this._pushState('close');\n      } else {\n        var tag = this._getTag();\n\n        if (tag === 'script') this.raw = strings.endScript;\n        if (tag === 'style') this.raw = strings.endStyle;\n        if (tag === 'title') this.raw = strings.endTitle;\n\n        this._pushState('open');\n      }\n    } else if (this.state === 'open' && compare(this._last, strings.comment)) {\n      this.buffers.push(buf.slice(offset, i + 1));\n      offset = i + 1;\n      this.state = 'text';\n      this.raw = strings.endComment;\n\n      this._pushState('open');\n    } else if (this.state === 'open' && compare(this._last, strings.cdata)) {\n      this.buffers.push(buf.slice(offset, i + 1));\n      offset = i + 1;\n      this.state = 'text';\n      this.raw = strings.endCdata;\n\n      this._pushState('open');\n    }\n  }\n\n  if (offset < buf.length) this.buffers.push(buf.slice(offset));\n  next();\n};\n\nTokenize.prototype._flush = function (next) {\n  if (this.state === 'text') this._pushState('text');\n  this.push(null);\n  next();\n};\n\nTokenize.prototype._pushState = function (ev) {\n  if (this.buffers.length === 0) return;\n  var buf = Buffer.concat(this.buffers);\n  this.buffers = [];\n  this.push([ev, buf]);\n};\n\nTokenize.prototype._getChar = function (i) {\n  var offset = 0;\n\n  for (var j = 0; j < this.buffers.length; j++) {\n    var buf = this.buffers[j];\n\n    if (offset + buf.length > i) {\n      return buf[i - offset];\n    }\n\n    offset += buf;\n  }\n};\n\nTokenize.prototype._getTag = function () {\n  var offset = 0;\n  var tag = '';\n\n  for (var j = 0; j < this.buffers.length; j++) {\n    var buf = this.buffers[j];\n\n    for (var k = 0; k < buf.length; k++) {\n      if (offset === 0 && k === 0) continue;\n      var c = String.fromCharCode(buf[k]);\n\n      if (/[^\\w-!\\[\\]]/.test(c)) {\n        return tag.toLowerCase();\n      } else tag += c;\n    }\n\n    offset += buf.length;\n  }\n};\n\nTokenize.prototype._testRaw = function (buf, offset, index) {\n  var raw = this.raw,\n      last = this._last;\n  if (!compare(last, raw)) return;\n  this.buffers.push(buf.slice(offset, index + 1));\n  var buf = Buffer.concat(this.buffers);\n  var k = buf.length - raw.length;\n  return [buf.slice(0, k), buf.slice(k)];\n};\n\nfunction compare(a, b) {\n  if (a.length < b.length) return false;\n\n  for (var i = a.length - 1, j = b.length - 1; i >= 0 && j >= 0; i--, j--) {\n    if (lower(a[i]) !== lower(b[j])) return false;\n  }\n\n  return true;\n}\n\nfunction lower(n) {\n  if (n >= 65 && n <= 90) return n + 32;\n  return n;\n}\n\nfunction isWhiteSpace(b) {\n  return b === 0x20 || b === 0x09 || b === 0x0A || b === 0x0C || b === 0x0D;\n}","map":{"version":3,"names":["bufferFrom","require","Transform","inherits","Tokenize","module","exports","codes","lt","charCodeAt","gt","slash","dquote","squote","equal","strings","endScript","endStyle","endTitle","comment","endComment","cdata","endCdata","states","call","_readableState","objectMode","state","tagState","quoteState","raw","buffers","_last","prototype","_transform","buf","enc","next","i","offset","_prev","Buffer","concat","length","_offset","b","push","shift","parts","_testRaw","isWhiteSpace","slice","TagNameState","_pushState","AttributeNameState","BeforeAttributeValueState","AttributeValueState","_getChar","tag","_getTag","compare","_flush","ev","j","k","c","String","fromCharCode","test","toLowerCase","index","last","a","lower","n"],"sources":["/Users/scapista/code/hackathon/group-7-hackathon-backend/frontend/node_modules/html-tokenize/index.js"],"sourcesContent":["var bufferFrom = require('buffer-from')\nvar Transform = require('readable-stream').Transform;\nvar inherits = require('inherits');\n\ninherits(Tokenize, Transform);\nmodule.exports = Tokenize;\n\nvar codes = {\n    lt: '<'.charCodeAt(0),\n    gt: '>'.charCodeAt(0),\n    slash: '/'.charCodeAt(0),\n    dquote: '\"'.charCodeAt(0),\n    squote: \"'\".charCodeAt(0),\n    equal: '='.charCodeAt(0)\n};\n\nvar strings = {\n    endScript: bufferFrom('</script'),\n    endStyle: bufferFrom('</style'),\n    endTitle: bufferFrom('</title'),\n    comment: bufferFrom('<!--'),\n    endComment: bufferFrom('-->'),\n    cdata: bufferFrom('<![CDATA['),\n    endCdata: bufferFrom(']]>')\n};\n\nvar states = {\n    'TagNameState': 1,\n    'AttributeNameState': 2,\n    'BeforeAttributeValueState': 3,\n    'AttributeValueState':4\n}\n\nfunction Tokenize () {\n    if (!(this instanceof Tokenize)) return new Tokenize;\n    Transform.call(this);\n    this._readableState.objectMode = true;\n    this.state = 'text';\n    this.tagState = null;\n    this.quoteState = null;\n    this.raw = null;\n    this.buffers = [];\n    this._last = [];\n}\n\nTokenize.prototype._transform = function (buf, enc, next) {\n    var i = 0;\n    var offset = 0;\n    \n    if (this._prev) {\n        buf = Buffer.concat([ this._prev, buf ]);\n        i = this._prev.length - 1;\n        offset = this._offset;\n        this._prev = null;\n        this._offset = 0;\n    }\n    \n    for (; i < buf.length; i++) {\n        var b = buf[i];\n        this._last.push(b);\n        if (this._last.length > 9) this._last.shift();\n        // detect end of raw character mode (comment, script,..)\n        if (this.raw) {\n            var parts = this._testRaw(buf, offset, i);\n            if (parts) {\n                this.push([ 'text', parts[0] ]);\n                \n                if (this.raw === strings.endComment\n                || this.raw === strings.endCdata) {\n                    this.state = 'text';\n                    this.buffers = [];\n                    this.push([ 'close', parts[1] ]);\n                }\n                else {\n                    this.state = 'open';\n                    this.buffers = [ parts[1] ];\n                }\n                \n                this.raw = null;\n                offset = i + 1;\n            }\n        }\n        // ask for more data if last byte is '<' \n        else if (this.state === 'text' && b === codes.lt\n        && i === buf.length - 1) {\n            this._prev = buf;\n            this._offset = offset;\n            return next();\n        }\n        // detect a tag opening\n        else if (this.state === 'text' && b === codes.lt\n        && !isWhiteSpace(buf[i+1])) {\n            if (i > 0 && i - offset > 0) {\n                this.buffers.push(buf.slice(offset, i));\n            }\n            offset = i;\n            this.state = 'open';\n            this.tagState = states.TagNameState;\n            this._pushState('text');\n        }\n        else if (\n            this.tagState === states.TagNameState &&\n            isWhiteSpace(b)\n        ) {\n            this.tagState = states.AttributeNameState\n        }\n        else if (\n            this.tagState === states.AttributeNameState &&\n            b === codes.equal\n        ) {\n            this.tagState = states.BeforeAttributeValueState\n        }\n        else if (\n            this.tagState === states.BeforeAttributeValueState &&\n            isWhiteSpace(b)\n        ) {}\n        else if (\n            this.tagState === states.BeforeAttributeValueState\n            && b !== codes.gt\n        ) {\n            this.tagState = states.AttributeValueState;\n            if (b === codes.dquote) {\n                this.quoteState = 'double';\n            } else if (b === codes.squote) {\n                this.quoteState = 'single';\n            } else {\n                this.quoteState = null;\n            }\n        }\n        else if (\n            this.tagState === states.AttributeValueState &&\n            !this.quoteState &&\n            isWhiteSpace(b)\n        ) {\n            this.tagState = states.AttributeNameState;\n        }\n        else if (\n            this.tagState === states.AttributeValueState &&\n            this.quoteState === 'double' &&\n            b === codes.dquote\n        ) {\n            this.quoteState = null;\n            this.tagState = states.AttributeNameState;\n        }\n        else if (\n            this.tagState === states.AttributeValueState &&\n            this.quoteState === 'single' &&\n            b === codes.squote\n        ) {\n            this.quoteState = null;\n            this.tagState = states.AttributeNameState;\n        }\n        else if (this.state === 'open' && b === codes.gt && !this.quoteState) {\n            this.buffers.push(buf.slice(offset, i + 1));\n            offset = i + 1;\n            this.state = 'text';\n            this.tagState = null;\n            if (this._getChar(1) === codes.slash) {\n                this._pushState('close');\n            }\n            else {\n                var tag = this._getTag();\n                if (tag === 'script') this.raw = strings.endScript;\n                if (tag === 'style') this.raw = strings.endStyle;\n                if (tag === 'title') this.raw = strings.endTitle;\n                this._pushState('open');\n            }\n        }\n        else if (this.state === 'open' && compare(this._last, strings.comment)) {\n            this.buffers.push(buf.slice(offset, i + 1));\n            offset = i + 1;\n            this.state = 'text';\n            this.raw = strings.endComment;\n            this._pushState('open');\n        }\n        else if (this.state === 'open' && compare(this._last, strings.cdata)) {\n            this.buffers.push(buf.slice(offset, i + 1));\n            offset = i + 1;\n            this.state = 'text';\n            this.raw = strings.endCdata;\n            this._pushState('open');\n        }\n    }\n    if (offset < buf.length) this.buffers.push(buf.slice(offset));\n    next();\n};\n\nTokenize.prototype._flush = function (next) {\n    if (this.state === 'text') this._pushState('text');\n    this.push(null);\n    next();\n};\n\nTokenize.prototype._pushState = function (ev) {\n    if (this.buffers.length === 0) return;\n    var buf = Buffer.concat(this.buffers);\n    this.buffers = [];\n    this.push([ ev, buf ]);\n};\n\nTokenize.prototype._getChar = function (i) {\n    var offset = 0;\n    for (var j = 0; j < this.buffers.length; j++) {\n        var buf = this.buffers[j];\n        if (offset + buf.length > i) {\n            return buf[i - offset];\n        }\n        offset += buf;\n    }\n};\n\nTokenize.prototype._getTag = function () {\n    var offset = 0;\n    var tag = '';\n    for (var j = 0; j < this.buffers.length; j++) {\n        var buf = this.buffers[j];\n        for (var k = 0; k < buf.length; k++) {\n            if (offset === 0 && k === 0) continue;\n            var c = String.fromCharCode(buf[k]);\n            if (/[^\\w-!\\[\\]]/.test(c)) {\n                return tag.toLowerCase();\n            }\n            else tag += c;\n        }\n        offset += buf.length;\n    }\n};\n\nTokenize.prototype._testRaw = function (buf, offset, index) {\n    var raw = this.raw, last = this._last;\n    if (!compare(last, raw)) return;\n    \n    this.buffers.push(buf.slice(offset, index + 1));\n    var buf = Buffer.concat(this.buffers);\n    var k = buf.length - raw.length;\n    return [ buf.slice(0, k), buf.slice(k) ];\n};\n\nfunction compare (a, b) {\n    if (a.length < b.length) return false;\n    for (var i=a.length-1, j=b.length-1; i >= 0 && j >= 0; i--, j--) {\n        if (lower(a[i]) !== lower(b[j])) return false;\n    }\n    return true;\n}\n\nfunction lower (n) {\n    if (n >= 65 && n <= 90) return n + 32;\n    return n;\n}\n\nfunction isWhiteSpace(b) {\n  return b === 0x20 || b === 0x09 || b === 0x0A || b === 0x0C || b === 0x0D;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}